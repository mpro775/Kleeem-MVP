# nginx.conf (Example reverse proxy for API/Frontend/n8n)
# Place under /etc/nginx/sites-available/kleem and symlink to sites-enabled

server {
  listen 80;
  server_name api.yourdomain.tld;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name api.yourdomain.tld;

  ssl_certificate     /etc/letsencrypt/live/api.yourdomain.tld/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/api.yourdomain.tld/privkey.pem;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  location / {
    proxy_pass http://127.0.0.1:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location = /.well-known/health { return 200 'ok'; add_header Content-Type text/plain; }
}

# Frontend
server {
  listen 80;
  server_name app.yourdomain.tld;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name app.yourdomain.tld;

  ssl_certificate     /etc/letsencrypt/live/app.yourdomain.tld/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/app.yourdomain.tld/privkey.pem;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  root /var/www/kleem-frontend; # point to built dist
  index index.html;
  location / {
    try_files $uri /index.html;
  }
}

# n8n
server {
  listen 80;
  server_name n8n.yourdomain.tld;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name n8n.yourdomain.tld;

  ssl_certificate     /etc/letsencrypt/live/n8n.yourdomain.tld/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/n8n.yourdomain.tld/privkey.pem;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  location / {
    proxy_pass http://127.0.0.1:5678;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
  }
}
