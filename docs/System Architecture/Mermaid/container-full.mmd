%%{init: {"C4": {"theme": "base", "themeVariables": {
  "primaryColor": "#0ea5e9",
  "primaryTextColor": "#fff",
  "primaryBorderColor": "#000",
  "lineColor": "#333",
  "secondaryColor": "#6b7280",
  "tertiaryColor": "#10b981"
}}}}%%

C4Container
    title Kleem â€” Container Diagram (Full)

    UpdateLayoutConfig($c4ShapeInRow="3", $c4BoundaryInRow="1")

    %% === TOP: Actors ===
    Person(merchant, "Merchant", "Manages his store")
    Person(shopper, "Shopper", "Shops & chats")
    Person(platform_admin, "Platform Admin", "Administers the platform")

    %% === MIDDLE: Kleem System ===
    System_Boundary(kleem, "Kleem System") {

        %% UIs row
        Boundary(ui, "Client UIs") {
            Container(platform_admin_portal, "Platform Admin Portal", "React / MUI", "Admin console")
            Container(merchant_portal, "Merchant Portal", "React / MUI", "Merchant console")
            Container(web_chat, "Web Chat Widget", "JS Widget", "Embedded chat")
            Container(storefront, "Micro Storefront", "Next.js", "Mini storefront")
        }

        %% Services row
        Boundary(services, "Backend Services") {
            Container(api, "Backend API", "NestJS", "Auth / Inbox / Training / Knowledge / Integrations / Webhooks")
            Container(workers, "Background Workers", "NestJS", "AMQP consumers & jobs")
            Container(n8n, "Orchestrator", "n8n", "AI & tools workflows")
            Container(embed, "Embedding Service", "FastAPI", "Text embeddings")
            Container(extractor, "Extractor Service", "FastAPI / Playwright", "Crawling & indexing")
        }

        %% Data & infra row
        Boundary(data, "Infrastructure & Data") {
            ContainerDb(mongodb, "MongoDB", "Mongo", "Primary database")
            ContainerDb(redis, "Redis", "Redis", "Cache & sessions")
            ContainerDb(qdrant, "Qdrant", "Qdrant", "Vector store")
            ContainerQueue(rabbit, "RabbitMQ", "AMQP", "Message broker")
            Container(minio, "MinIO", "S3-compatible", "Object storage")
        }
    }

    %% === BOTTOM: External Systems ===
    Boundary(ext, "External Systems") {
        System_Ext(whatsapp, "WhatsApp Business API", "Messaging channel")
        System_Ext(telegram, "Telegram Bot API", "Messaging channel")
        System_Ext(ecommerce, "E-commerce Platforms", "Salla / Zid / Shopify")
        System_Ext(payment_gw, "Payment Gateway", "Payments / checkout")
        System_Ext(llm_provider, "LLM Provider", "AI inference")
        System_Ext(merchant_website, "Merchant Website", "Hosts the web chat widget")
    }

    %% === Relationships ===
    Rel(merchant, merchant_portal, "Manage", "HTTPS")
    Rel(platform_admin, platform_admin_portal, "Administer", "HTTPS")
    Rel(shopper, web_chat, "Chat", "WebSocket")
    Rel(shopper, storefront, "Browse & buy", "HTTPS")

    Rel(platform_admin_portal, api, "API calls", "REST / JSON")
    Rel(merchant_portal, api, "API calls", "REST / JSON")
    Rel(web_chat, api, "Sessions / messages", "REST / WebSocket")
    Rel(storefront, api, "Catalog / cart / orders", "REST / JSON")

    Rel(api, n8n, "Invoke workflows", "REST")
    Rel(api, extractor, "Trigger extraction", "HTTP")
    Rel(api, embed, "Create embeddings", "HTTP")

    Rel(api, mongodb, "CRUD", "Driver")
    Rel(api, redis, "Cache", "TCP")
    Rel(api, qdrant, "Vector search", "HTTP")
    Rel(api, rabbit, "Publish events", "AMQP")
    Rel(api, minio, "Store files", "S3 API")

    Rel(workers, rabbit, "Consume jobs", "AMQP")
    Rel(workers, qdrant, "Upsert vectors", "HTTP")
    Rel(workers, mongodb, "Update data", "Driver")

    Rel(extractor, rabbit, "Publish indexing tasks", "AMQP")
    Rel(n8n, api, "Tool calls", "REST")

    BiRel(api, whatsapp, "Webhooks / messages", "HTTPS")
    BiRel(api, telegram, "Webhooks / messages", "HTTPS")
    BiRel(api, ecommerce, "Sync products & orders", "REST")
    Rel(api, payment_gw, "Payments", "REST")
    Rel(n8n, llm_provider, "AI requests", "HTTPS")
    Rel(merchant_website, web_chat, "Embed widget", "JavaScript")

    %% === Styling ===
    UpdateElementStyle(platform_admin_portal, $bgColor="#0ea5e9", $fontColor="white")
    UpdateElementStyle(merchant_portal, $bgColor="#0ea5e9", $fontColor="white")
    UpdateElementStyle(web_chat, $bgColor="#0ea5e9", $fontColor="white")
    UpdateElementStyle(storefront, $bgColor="#0ea5e9", $fontColor="white")
    UpdateElementStyle(api, $bgColor="#0ea5e9", $fontColor="white")
    UpdateElementStyle(workers, $bgColor="#0ea5e9", $fontColor="white")
    UpdateElementStyle(n8n, $bgColor="#0ea5e9", $fontColor="white")
    UpdateElementStyle(embed, $bgColor="#0ea5e9", $fontColor="white")
    UpdateElementStyle(extractor, $bgColor="#0ea5e9", $fontColor="white")
