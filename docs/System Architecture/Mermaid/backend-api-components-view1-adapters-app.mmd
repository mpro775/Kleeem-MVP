%%{init: {"C4": {"theme": "base", "themeVariables": {
  "primaryColor": "#14b8a6",
  "primaryTextColor": "#000",
  "primaryBorderColor": "#000",
  "lineColor": "#333",
  "secondaryColor": "#6b7280",
  "tertiaryColor": "#0ea5e9"
}}}}%%

C4Component
    title Kleem — Components View 1: Adapters → Application

    UpdateLayoutConfig($c4ShapeInRow="4", $c4BoundaryInRow="2")

    Container_Boundary(api, "Backend API (NestJS)") {
        Boundary(adapters, "Adapters / Controllers") {
            Component(channelWebhookController, "ChannelWebhookController", "Controller", "Inbound webhooks")
            Component(webChatController, "WebChatController", "Controller", "Web chat streaming (SSE/WS)")
            Component(conversationsController, "ConversationsController", "Controller", "Conversations CRUD")
            Component(knowledgeController, "KnowledgeController", "Controller", "KB ingest & search")
            Component(productsController, "ProductsController", "Controller", "Product search/index")
            Component(storefrontController, "StorefrontController", "Controller", "Cart & orders")
            Component(paymentsController, "PaymentsController", "Controller", "Payments")
            Component(integrationsController, "IntegrationsController", "Controller", "Salla/Zid/Shopify")
            Component(adminController, "AdminController", "Controller", "Global settings")
        }

        Boundary(app, "Application / Use Cases") {
            Component(conversationService, "ConversationService", "Service", "Message routing & state")
            Component(policyGuard, "ConversationPolicyGuard", "Policy", "Policies / quotas")
            Component(handoffService, "HandoffService", "Service", "Human handoff")
            Component(knowledgeService, "KnowledgeService", "Service", "KB ingest/search")
            Component(productSearchService, "ProductSearchService", "Service", "Vector + metadata search")
            Component(feedbackService, "FeedbackService", "Service", "Bot ratings")
            Component(instructionService, "InstructionService", "Service", "Prompts mgmt")
            Component(rerankerService, "RerankerService", "Service", "Re-rank")
            Component(paymentsService, "PaymentsService", "Service", "Payment flows")
            Component(aiOrchestratorClient, "AIOrchestratorClient", "Client", "n8n toolchains")
        }
    }

    %% Relations kept minimal to reduce crossing
    Rel(channelWebhookController, conversationService, "Process inbound")
    Rel(webChatController, conversationService, "Streaming / append")
    Rel(conversationsController, conversationService, "Manage")
    Rel(conversationsController, policyGuard, "Apply policy")
    Rel(knowledgeController, knowledgeService, "Ingest/search")
    Rel(productsController, productSearchService, "Search")
    Rel(storefrontController, productSearchService, "Lookup")
    Rel(paymentsController, paymentsService, "Charge/refund")
    Rel(integrationsController, aiOrchestratorClient, "Config connectors")
    Rel(adminController, instructionService, "Manage prompts")

    UpdateElementStyle(adapters, $borderColor="#0ea5e9")
    UpdateElementStyle(app, $borderColor="#10b981")
