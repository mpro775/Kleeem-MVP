%%{init: {"C4": {"theme": "base", "themeVariables": {
  "primaryColor": "#14b8a6",
  "primaryTextColor": "#000",
  "primaryBorderColor": "#000",
  "lineColor": "#333",
  "secondaryColor": "#6b7280",
  "tertiaryColor": "#0ea5e9"
}}}}%%

C4Component
    title Kleem — Components View 2: Application → Infrastructure

    UpdateLayoutConfig($c4ShapeInRow="4", $c4BoundaryInRow="2")

    Container_Boundary(api, "Backend API (NestJS)") {
        Boundary(app, "Application / Use Cases") {
            Component(conversationService, "ConversationService", "Service", "Message routing & state")
            Component(policyGuard, "ConversationPolicyGuard", "Policy", "Policies / quotas")
            Component(knowledgeService, "KnowledgeService", "Service", "KB ingest/search")
            Component(productSearchService, "ProductSearchService", "Service", "Vector + metadata search")
            Component(instructionService, "InstructionService", "Service", "Prompts mgmt")
            Component(aiOrchestratorClient, "AIOrchestratorClient", "Client", "n8n toolchains")
        }

        Boundary(infra, "Infrastructure") {
            Component(vectorService, "VectorService", "Infra Service", "Qdrant abstraction")
            Component(embeddingClient, "EmbeddingClient", "Client", "Embeddings API")
            Component(extractorClient, "ExtractorClient", "Client", "Crawler/indexer API")
            Component(cacheService, "CacheService", "Infra", "Redis cache / rate limits")
            Component(eventBus, "EventBus", "Infra", "AMQP events")
            Component(auditLogger, "AuditLogger", "Infra", "Audit trails")
            Component(webhookSignatureVerifier, "WebhookSignatureVerifier", "Infra", "Verify signatures")
            Component(idempotencyStore, "IdempotencyStore", "Infra", "De-dup webhooks")
            Component(metrics, "HttpMetricsInterceptor", "Infra", "Metrics / tracing")
            Component(authGuards, "JwtAuthGuard / RolesGuard", "Infra", "AuthN/Z")
        }
    }

    %% Relations
    Rel(productSearchService, vectorService, "Vector search")
    Rel(knowledgeService, vectorService, "Vector search")
    Rel(vectorService, embeddingClient, "Create embeddings")
    Rel(knowledgeService, extractorClient, "Crawl / extract")
    Rel(aiOrchestratorClient, eventBus, "Emit job request")
    Rel(eventBus, cacheService, "Notify rate-limit counters")
    Rel(conversationService, cacheService, "Session cache")
    Rel(metrics, conversationService, "Observe")
    Rel(authGuards, conversationService, "Protect")

    UpdateElementStyle(app, $borderColor="#10b981")
    UpdateElementStyle(infra, $borderColor="#6b7280")
