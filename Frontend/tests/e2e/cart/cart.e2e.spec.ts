import { test, expect } from '@playwright/test';

// ๐ญ ุงุฎุชุจุงุฑุงุช E2E ูุณูุฉ ุงูุชุณูู - Kaleem Frontend

test.describe('๐ ุณูุฉ ุงูุชุณูู', () => {
  test.beforeEach(async ({ page }) => {
    // ุงูุงูุชูุงู ุฅูู ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ
    await page.goto('/');
    await page.waitForLoadState('networkidle');
  });

  test('โ ุนุฑุถ ุณูุฉ ุงูุชุณูู ุงููุงุฑุบุฉ', async ({ page }) => {
    // ุงูููุฑ ุนูู ุฃููููุฉ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      
      // ุงูุชุธุงุฑ ุธููุฑ ุงูุณูุฉ
      await page.waitForTimeout(500);
      
      // ุงูุชุญูู ูู ูุฌูุฏ ุงูุณูุฉ
      const cartDropdown = page.locator('.cart-dropdown, .cart-panel, [data-testid="cart-dropdown"], .cart-sidebar');
      if (await cartDropdown.count() > 0) {
        await expect(cartDropdown.first()).toBeVisible();
        
        // ุงูุชุญูู ูู ุฑุณุงูุฉ ุงูุณูุฉ ุงููุงุฑุบุฉ
        const emptyMessage = page.locator('.empty-cart, .cart-empty, [data-testid="empty-cart"], .no-items');
        if (await emptyMessage.count() > 0) {
          await expect(emptyMessage.first()).toBeVisible();
        }
      }
    }
  });

  test('๐๏ธ ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ', async ({ page }) => {
    // ุงูุงูุชูุงู ูุตูุญุฉ ุงูููุชุฌุงุช
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    // ุงูุจุญุซ ุนู ุฃุฒุฑุงุฑ ุฅุถุงูุฉ ููุณูุฉ
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      // ุงูููุฑ ุนูู ุฃูู ุฒุฑ ุฅุถุงูุฉ ููุณูุฉ
      const firstButton = addToCartButtons.first();
      await firstButton.click();
      
      // ุงูุชุธุงุฑ ุฑุณุงูุฉ ุงูุชุฃููุฏ
      await page.waitForTimeout(2000);
      
      // ุงูุชุญูู ูู ูุฌูุฏ ุฑุณุงูุฉ ุชุฃููุฏ
      const successMessage = page.locator('.success, .success-message, [data-testid="success"], .alert-success');
      if (await successMessage.count() > 0) {
        await expect(successMessage.first()).toBeVisible();
      }
      
      // ุงูุชุญูู ูู ุชุญุฏูุซ ุนุฏุงุฏ ุงูุณูุฉ
      const cartCounter = page.locator('.cart-counter, .cart-count, [data-testid="cart-count"], .cart-badge');
      if (await cartCounter.count() > 0) {
        await expect(cartCounter.first()).toBeVisible();
        
        // ุงูุชุญูู ูู ุฃู ุงูุนุฏุงุฏ ูุธูุฑ ุงูุฑูู 1
        const counterText = await cartCounter.first().textContent();
        expect(counterText).toMatch(/1/);
      }
    }
  });

  test('๐๏ธ ุนุฑุถ ูุญุชููุงุช ุงูุณูุฉ', async ({ page }) => {
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ ุฃููุงู
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ุงูููุฑ ุนูู ุฃููููุฉ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      
      // ุงูุชุธุงุฑ ุธููุฑ ุงูุณูุฉ
      await page.waitForTimeout(500);
      
      // ุงูุชุญูู ูู ูุฌูุฏ ุงูุณูุฉ
      const cartDropdown = page.locator('.cart-dropdown, .cart-panel, [data-testid="cart-dropdown"], .cart-sidebar');
      if (await cartDropdown.count() > 0) {
        await expect(cartDropdown.first()).toBeVisible();
        
        // ุงูุชุญูู ูู ูุฌูุฏ ุงูููุชุฌ ูู ุงูุณูุฉ
        const cartItems = page.locator('.cart-item, .cart-product, [data-testid="cart-item"], .item');
        if (await cartItems.count() > 0) {
          await expect(cartItems.first()).toBeVisible();
          
          // ุงูุชุญูู ูู ูุฌูุฏ ุงุณู ุงูููุชุฌ
          const productName = cartItems.first().locator('.product-name, .item-name, [data-testid="product-name"]');
          if (await productName.count() > 0) {
            await expect(productName.first()).toBeVisible();
          }
          
          // ุงูุชุญูู ูู ูุฌูุฏ ุงูุณุนุฑ
          const productPrice = cartItems.first().locator('.product-price, .item-price, [data-testid="product-price"]');
          if (await productPrice.count() > 0) {
            await expect(productPrice.first()).toBeVisible();
          }
          
          // ุงูุชุญูู ูู ูุฌูุฏ ุงููููุฉ
          const quantityInput = cartItems.first().locator('input[type="number"], .quantity-input, [data-testid="quantity"]');
          if (await quantityInput.count() > 0) {
            await expect(quantityInput.first()).toBeVisible();
            await expect(quantityInput.first()).toHaveValue('1');
          }
        }
      }
    }
  });

  test('โโ ุชุบููุฑ ุงููููุฉ', async ({ page }) => {
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ ุฃููุงู
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ูุชุญ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      await page.waitForTimeout(500);
      
      // ุงูุจุญุซ ุนู ุฃุฒุฑุงุฑ ุชุบููุฑ ุงููููุฉ
      const increaseButton = page.locator('.increase-quantity, .quantity-up, [data-testid="increase"], button:has-text("+")');
      const decreaseButton = page.locator('.decrease-quantity, .quantity-down, [data-testid="decrease"], button:has-text("-")');
      
      if (await increaseButton.count() > 0 && await decreaseButton.count() > 0) {
        // ุฒูุงุฏุฉ ุงููููุฉ
        await increaseButton.first().click();
        await page.waitForTimeout(500);
        
        // ุงูุชุญูู ูู ุฃู ุงููููุฉ ุฃุตุจุญุช 2
        const quantityInput = page.locator('input[type="number"], .quantity-input, [data-testid="quantity"]');
        if (await quantityInput.count() > 0) {
          await expect(quantityInput.first()).toHaveValue('2');
        }
        
        // ุชูููู ุงููููุฉ
        await decreaseButton.first().click();
        await page.waitForTimeout(500);
        
        // ุงูุชุญูู ูู ุฃู ุงููููุฉ ุนุงุฏุช ูู 1
        if (await quantityInput.count() > 0) {
          await expect(quantityInput.first()).toHaveValue('1');
        }
      }
    }
  });

  test('๐๏ธ ุญุฐู ููุชุฌ ูู ุงูุณูุฉ', async ({ page }) => {
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ ุฃููุงู
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ูุชุญ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      await page.waitForTimeout(500);
      
      // ุงูุจุญุซ ุนู ุฒุฑ ุงูุญุฐู
      const removeButton = page.locator('.remove-item, .delete-item, [data-testid="remove"], button[aria-label*="ุญุฐู"], button[aria-label*="Remove"]');
      
      if (await removeButton.count() > 0) {
        // ุงูููุฑ ุนูู ุฒุฑ ุงูุญุฐู
        await removeButton.first().click();
        
        // ุงูุชุธุงุฑ ุชุฃููุฏ ุงูุญุฐู
        await page.waitForTimeout(1000);
        
        // ุงูุชุญูู ูู ุฑุณุงูุฉ ุชุฃููุฏ ุงูุญุฐู
        const confirmMessage = page.locator('.confirm-remove, .delete-confirm, [data-testid="confirm-remove"]');
        if (await confirmMessage.count() > 0) {
          await expect(confirmMessage.first()).toBeVisible();
          
          // ุงูููุฑ ุนูู ุฒุฑ ุงูุชุฃููุฏ
          const confirmButton = confirmMessage.locator('button:has-text("ูุนู"), button:has-text("Yes"), button:has-text("ุชุฃููุฏ")');
          if (await confirmButton.count() > 0) {
            await confirmButton.first().click();
            
            // ุงูุชุธุงุฑ ุญุฐู ุงูููุชุฌ
            await page.waitForTimeout(1000);
            
            // ุงูุชุญูู ูู ุฃู ุงูุณูุฉ ุฃุตุจุญุช ูุงุฑุบุฉ
            const emptyMessage = page.locator('.empty-cart, .cart-empty, [data-testid="empty-cart"], .no-items');
            if (await emptyMessage.count() > 0) {
              await expect(emptyMessage.first()).toBeVisible();
            }
            
            // ุงูุชุญูู ูู ุฅุนุงุฏุฉ ุชุนููู ุนุฏุงุฏ ุงูุณูุฉ
            const cartCounter = page.locator('.cart-counter, .cart-count, [data-testid="cart-count"], .cart-badge');
            if (await cartCounter.count() > 0) {
              const counterText = await cartCounter.first().textContent();
              expect(counterText).toMatch(/0/);
            }
          }
        }
      }
    }
  });

  test('๐ฐ ุญุณุงุจ ุงููุฌููุน', async ({ page }) => {
    // ุฅุถุงูุฉ ููุชุฌูู ููุณูุฉ
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 1) {
      // ุฅุถุงูุฉ ุงูููุชุฌ ุงูุฃูู
      await addToCartButtons.first().click();
      await page.waitForTimeout(1000);
      
      // ุฅุถุงูุฉ ุงูููุชุฌ ุงูุซุงูู
      await addToCartButtons.nth(1).click();
      await page.waitForTimeout(1000);
    }
    
    // ูุชุญ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      await page.waitForTimeout(500);
      
      // ุงูุชุญูู ูู ูุฌูุฏ ุญุณุงุจ ุงููุฌููุน
      const subtotal = page.locator('.subtotal, .cart-subtotal, [data-testid="subtotal"], .total-before-tax');
      if (await subtotal.count() > 0) {
        await expect(subtotal.first()).toBeVisible();
        
        // ุงูุชุญูู ูู ูุฌูุฏ ุงูุถุฑูุจุฉ
        const tax = page.locator('.tax, .cart-tax, [data-testid="tax"], .vat');
        if (await tax.count() > 0) {
          await expect(tax.first()).toBeVisible();
        }
        
        // ุงูุชุญูู ูู ูุฌูุฏ ุงููุฌููุน ุงูููุงุฆู
        const total = page.locator('.total, .cart-total, [data-testid="total"], .final-total');
        if (await total.count() > 0) {
          await expect(total.first()).toBeVisible();
        }
      }
    }
  });

  test('๐ ุงูุงูุชูุงู ูุตูุญุฉ ุงูุณูุฉ', async ({ page }) => {
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ ุฃููุงู
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ูุชุญ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      await page.waitForTimeout(500);
      
      // ุงูุจุญุซ ุนู ุฒุฑ ุงูุงูุชูุงู ูุตูุญุฉ ุงูุณูุฉ
      const viewCartButton = page.locator('a:has-text("ุนุฑุถ ุงูุณูุฉ"), a:has-text("View Cart"), button:has-text("ุนุฑุถ ุงูุณูุฉ"), button:has-text("View Cart")');
      
      if (await viewCartButton.count() > 0) {
        // ุงูููุฑ ุนูู ุงูุฒุฑ
        await viewCartButton.first().click();
        
        // ุงูุชุธุงุฑ ุชุญููู ุตูุญุฉ ุงูุณูุฉ
        await page.waitForLoadState('networkidle');
        
        // ุงูุชุญูู ูู ุชุบููุฑ URL
        expect(page.url()).toMatch(/cart|basket|shopping-cart/);
        
        // ุงูุชุญูู ูู ูุฌูุฏ ุตูุญุฉ ุงูุณูุฉ
        const cartPage = page.locator('.cart-page, .shopping-cart-page, [data-testid="cart-page"], main');
        await expect(cartPage.first()).toBeVisible();
      }
    }
  });

  test('๐ณ ุงูุงูุชูุงู ููุฏูุน', async ({ page }) => {
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ ุฃููุงู
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ุงูุงูุชูุงู ูุตูุญุฉ ุงูุณูุฉ
    await page.goto('/cart');
    await page.waitForLoadState('networkidle');
    
    // ุงูุจุญุซ ุนู ุฒุฑ ุงูุฏูุน
    const checkoutButton = page.locator('button:has-text("ุฅุชูุงู ุงูุทูุจ"), button:has-text("Checkout"), button:has-text("ุงูุฏูุน"), .checkout-button');
    
    if (await checkoutButton.count() > 0) {
      // ุงูููุฑ ุนูู ุฒุฑ ุงูุฏูุน
      await checkoutButton.first().click();
      
      // ุงูุชุธุงุฑ ุชุญููู ุตูุญุฉ ุงูุฏูุน
      await page.waitForLoadState('networkidle');
      
      // ุงูุชุญูู ูู ุชุบููุฑ URL
      expect(page.url()).toMatch(/checkout|payment|order/);
      
      // ุงูุชุญูู ูู ูุฌูุฏ ุตูุญุฉ ุงูุฏูุน
      const checkoutPage = page.locator('.checkout-page, .payment-page, [data-testid="checkout-page"], main');
      await expect(checkoutPage.first()).toBeVisible();
    }
  });

  test('๐ฑ ุงุฎุชุจุงุฑ ุงูุชุตููู ุงููุชุฌุงูุจ ููุณูุฉ', async ({ page }) => {
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ ุฃููุงู
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ุงุฎุชุจุงุฑ ุฃุญุฌุงู ุดุงุดุงุช ูุฎุชููุฉ
    const viewports = [
      { width: 1920, height: 1080, name: 'Desktop Large' },
      { width: 1366, height: 768, name: 'Desktop Small' },
      { width: 1024, height: 768, name: 'Tablet Landscape' },
      { width: 768, height: 1024, name: 'Tablet Portrait' },
      { width: 375, height: 667, name: 'Mobile' },
      { width: 320, height: 568, name: 'Mobile Small' }
    ];
    
    for (const viewport of viewports) {
      // ุชุบููุฑ ุญุฌู ุงููุงูุฐุฉ
      await page.setViewportSize(viewport);
      
      // ุงูุชุธุงุฑ ุฅุนุงุฏุฉ ุชุฎุทูุท ุงูุตูุญุฉ
      await page.waitForTimeout(500);
      
      // ูุชุญ ุงูุณูุฉ
      const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
      
      if (await cartIcon.count() > 0) {
        await cartIcon.first().click();
        await page.waitForTimeout(500);
        
        // ุงูุชุญูู ูู ุฃู ุงูุณูุฉ ุชุธูุฑ
        const cartDropdown = page.locator('.cart-dropdown, .cart-panel, [data-testid="cart-dropdown"], .cart-sidebar');
        if (await cartDropdown.count() > 0) {
          await expect(cartDropdown.first()).toBeVisible();
        }
      }
    }
  });

  test('๐จ ุงุฎุชุจุงุฑ ุงูุชุตููู RTL ููุณูุฉ', async ({ page }) => {
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ ุฃููุงู
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ูุชุญ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      await page.waitForTimeout(500);
      
      // ุงูุชุญูู ูู ุงุชุฌุงู ุงููุต RTL
      const body = page.locator('body, html');
      await expect(body).toHaveAttribute('dir', 'rtl');
      
      // ุงูุชุญูู ูู ูุบุฉ ุงูุตูุญุฉ
      await expect(body).toHaveAttribute('lang', 'ar');
      
      // ุงูุชุญูู ูู ุฃู ุงูุณูุฉ ุชุธูุฑ ุจุดูู ุตุญูุญ
      const cartDropdown = page.locator('.cart-dropdown, .cart-panel, [data-testid="cart-dropdown"], .cart-sidebar');
      if (await cartDropdown.count() > 0) {
        await expect(cartDropdown.first()).toBeVisible();
      }
    }
  });

  test('โฟ ุงุฎุชุจุงุฑ ุฅููุงููุฉ ุงููุตูู ููุณูุฉ', async ({ page }) => {
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ ุฃููุงู
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ูุชุญ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      await page.waitForTimeout(500);
      
      // ุงูุชุญูู ูู ูุฌูุฏ aria-label ูุฃููููุฉ ุงูุณูุฉ
      const cartIconAriaLabel = await cartIcon.first().getAttribute('aria-label');
      expect(cartIconAriaLabel).toBeTruthy();
      
      // ุงูุชุญูู ูู ูุฌูุฏ labels ููุญููู
      const inputs = page.locator('input, textarea, select');
      for (let i = 0; i < await inputs.count(); i++) {
        const input = inputs.nth(i);
        const label = await input.getAttribute('aria-label');
        const id = await input.getAttribute('id');
        
        if (id) {
          const labelElement = page.locator(`label[for="${id}"]`);
          if (await labelElement.count() > 0) {
            await expect(labelElement.first()).toBeVisible();
          }
        }
        
        if (!label && !id) {
          // ุงูุชุญูู ูู ูุฌูุฏ placeholder ุฃู aria-label
          const placeholder = await input.getAttribute('placeholder');
          const ariaLabel = await input.getAttribute('aria-label');
          expect(placeholder || ariaLabel).toBeTruthy();
        }
      }
    }
  });

  test('๐ ุงุฎุชุจุงุฑ ุงูุฃุฏุงุก', async ({ page }) => {
    // ููุงุณ ููุช ูุชุญ ุงูุณูุฉ
    const startTime = Date.now();
    
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ ุฃููุงู
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ูุชุญ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      
      // ุงูุชุธุงุฑ ุธููุฑ ุงูุณูุฉ
      await page.waitForTimeout(500);
      
      const openTime = Date.now() - startTime;
      
      // ุงูุชุญูู ูู ุฃู ููุช ูุชุญ ุงูุณูุฉ ุฃูู ูู ุซุงููุชูู
      expect(openTime).toBeLessThan(2000);
    }
  });

  test('๐ ุงุฎุชุจุงุฑ ุงูุฃูุงู', async ({ page }) => {
    // ูุญุงููุฉ ุงููุตูู ูุตูุญุฉ ุณูุฉ ูุญููุฉ
    await page.goto('/admin/cart');
    await page.waitForLoadState('networkidle');
    
    // ุงูุชุญูู ูู ุฅุนุงุฏุฉ ุงูุชูุฌูู ูุตูุญุฉ ุชุณุฌูู ุงูุฏุฎูู
    const currentUrl = page.url();
    expect(currentUrl).toMatch(/login|auth|signin/);
    
    // ุงูุนูุฏุฉ ููุตูุญุฉ ุงูุฑุฆูุณูุฉ
    await page.goto('/');
    await page.waitForLoadState('networkidle');
  });

  test('๐ ุงุฎุชุจุงุฑ ุงูุชุชุจุน', async ({ page }) => {
    // ุชูุนูู ุงูุชุชุจุน
    await page.context().tracing.start({ screenshots: true, snapshots: true });
    
    // ุชูููุฐ ุณููุงุฑูู ุงูุณูุฉ
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ูุชุญ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      await page.waitForTimeout(500);
    }
    
    // ุฅููุงู ุงูุชุชุจุน
    await page.context().tracing.stop({ path: 'test-results/cart-trace.zip' });
    
    // ุงูุชุญูู ูู ุฅูุดุงุก ููู ุงูุชุชุจุน
    const fs = require('fs');
    expect(fs.existsSync('test-results/cart-trace.zip')).toBe(true);
  });

  test('๐ญ ุงุฎุชุจุงุฑ ุงูุชูุงุนู ูุน ุงูุนูุงุตุฑ', async ({ page }) => {
    // ุฅุถุงูุฉ ููุชุฌ ููุณูุฉ ุฃููุงู
    await page.goto('/products');
    await page.waitForLoadState('networkidle');
    
    const addToCartButtons = page.locator('button:has-text("ุฃุถู ููุณูุฉ"), button:has-text("Add to Cart"), button[aria-label*="ุฃุถู"], .add-to-cart');
    
    if (await addToCartButtons.count() > 0) {
      await addToCartButtons.first().click();
      await page.waitForTimeout(2000);
    }
    
    // ูุชุญ ุงูุณูุฉ
    const cartIcon = page.locator('.cart-icon, .shopping-cart, [data-testid="cart-icon"], .cart-button');
    
    if (await cartIcon.count() > 0) {
      await cartIcon.first().click();
      await page.waitForTimeout(500);
      
      // ุงุฎุชุจุงุฑ ุงูููุฑ ุนูู ุงูุฃุฒุฑุงุฑ
      const buttons = page.locator('button, .btn, [role="button"]');
      
      if (await buttons.count() > 0) {
        // ุงูููุฑ ุนูู ุฃูู ุฒุฑ
        const firstButton = buttons.first();
        await firstButton.click();
        
        // ุงูุชุธุงุฑ ุงุณุชุฌุงุจุฉ
        await page.waitForTimeout(1000);
        
        // ุงูุชุญูู ูู ุนุฏู ุญุฏูุซ ุฎุทุฃ
        const errorMessages = page.locator('.error, .error-message, [data-testid="error"]');
        expect(await errorMessages.count()).toBe(0);
      }
    }
  });
});
